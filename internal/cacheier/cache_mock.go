// Code generated by MockGen. DO NOT EDIT.
// Source: cache.go
//
// Generated by this command:
//
//	mockgen -source cache.go -destination cache_mock.go -package cacheier
//
// Package cacheier is a generated GoMock package.
package cacheier

import (
	context "context"
	models "finalAssing/internal/models"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockRedInterface is a mock of RedInterface interface.
type MockRedInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRedInterfaceMockRecorder
}

// MockRedInterfaceMockRecorder is the mock recorder for MockRedInterface.
type MockRedInterfaceMockRecorder struct {
	mock *MockRedInterface
}

// NewMockRedInterface creates a new mock instance.
func NewMockRedInterface(ctrl *gomock.Controller) *MockRedInterface {
	mock := &MockRedInterface{ctrl: ctrl}
	mock.recorder = &MockRedInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRedInterface) EXPECT() *MockRedInterfaceMockRecorder {
	return m.recorder
}

// AddJobData mocks base method.
func (m *MockRedInterface) AddJobData(ctx context.Context, jobId uint, jobData *models.Job) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddJobData", ctx, jobId, jobData)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddJobData indicates an expected call of AddJobData.
func (mr *MockRedInterfaceMockRecorder) AddJobData(ctx, jobId, jobData any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddJobData", reflect.TypeOf((*MockRedInterface)(nil).AddJobData), ctx, jobId, jobData)
}

// FetchJobData mocks base method.
func (m *MockRedInterface) FetchJobData(ctx context.Context, jobId uint) (*models.Job, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchJobData", ctx, jobId)
	ret0, _ := ret[0].(*models.Job)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchJobData indicates an expected call of FetchJobData.
func (mr *MockRedInterfaceMockRecorder) FetchJobData(ctx, jobId any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchJobData", reflect.TypeOf((*MockRedInterface)(nil).FetchJobData), ctx, jobId)
}
